@model IEnumerable<EcomSiteMVC.Models.Entities.Product>
@{
    ViewData["Title"] = "Products";
}

<style>
    /* Responsive table */
    .table-responsive {
        width: 100%;
        overflow-x: auto;
        display: block;
        background-color: white;
        border-radius: 0.4rem;
        padding: 1rem;
    }

    table.custom-table {
        width: 100%;
        border-collapse: collapse;
    }

        table.custom-table th, table.custom-table td {
            padding: 12px;
            border-bottom: 1px solid #ddd;
            text-align: left;
        }

        /* Make the image smaller */
        table.custom-table img {
            width: 100%;
            height: auto;
            min-height: 60px;
            min-width: 60px;
            max-width: 100px;
            max-height: 100px;
            aspect-ratio: 1 / 1;
            object-fit: cover;
        }

        /* Add some style to action buttons */
        table.custom-table .btn {
            border-radius: 4px;
            display: inline-flex;
        }
</style>

<h2>All Products</h2>

<!-- Listing Products -->
<div class="table-responsive shadow">
    <table class="custom-table">
        <thead>
            <tr>
                <th>Image</th>
                <th>Product Name</th>
                <th>Category</th>
                <th>Description</th>
                <th>Price</th>
                <th>Stock(qty)</th>
                <th>Actions</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var product in Model)
            {
                <tr>
                    <td class="text-center">
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <img src="@product.ImageUrl" alt="@product.ProductName" />
                        }
                        else
                        {
                            <img src="~/images/default-profile.png" alt="Default Image" />
                        }
                    </td>
                    <td>@product.ProductName</td>
                    <td>@product.Category?.CategoryName</td>
                    <td>@product.Description</td>
                    <td>@product.Price</td>
                    <td>@product.StockQuantity</td>
                    <td>
                        <div class="d-flex gap-2">
                            <a asp-action="EditProductPage" asp-route-id="@product.ProductId" class="btn btn-success btn-sm">
                                <span class="material-symbols-outlined">
                                    edit_note
                                </span>
                            </a>
                            <button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal"
                                    data-product-id="@product.ProductId"
                                    data-product-name="@product.ProductName">
                                <span class="material-symbols-outlined">
                                    delete
                                </span>
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@*Importing Delete confirmation modal*@
@await Html.PartialAsync("_DeleteModal")

<script>
    // Attach event listener for delete buttons
    document.querySelectorAll('button[data-bs-target="#deleteModal"]').forEach(button => {
        button.addEventListener('click', function () {
            const productId = this.getAttribute('data-product-id');
            const productName = this.getAttribute('data-product-name');

            // Set the product name in the modal
            document.getElementById('productToDelete').textContent = productName;

            // Update the confirmation button link
            const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            confirmDeleteBtn.href = `/Product/DeleteProduct?id=${productId}`;
        });
    });
</script>