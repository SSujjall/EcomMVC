@{
    var toastMessage = TempData["ToastMessage"] as string;
    var toastType = TempData["ToastType"] as string ?? "success"; // Default to success if not specified
}

<style>
    .toast-container {
        max-width: 20rem; /* Adjust the width as necessary */
    }

    .toast {
        border-radius: 0.5rem;
    }

    .toast-body {
        font-size: 1rem;
        padding-left: 1.5rem;
        height: 60px;
        display: flex;
        align-items: center;
    }
</style>

<div aria-live="polite" aria-atomic="true" class="position-relative" style="z-index: 9999;">
    <div class="toast-container position-fixed top-0 end-0 p-3">
        @if (!string.IsNullOrEmpty(toastMessage))
        {
            <div id="notificationToast" class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-body @(toastType == "success" ? "bg-success" : "bg-danger") text-white d-flex justify-content-between align-items-center">
                    <span id="toastText">@toastMessage</span>
                    <button type="button" class="btn-close btn-close-white ms-2" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var notificationToast = document.getElementById('notificationToast');
            if (notificationToast) {
                // Function to hide the toast
                function hideToast() {
                    notificationToast.classList.remove('show');
                    notificationToast.classList.add('hide');
                }

                setTimeout(hideToast, 2000);
            }
        });
    </script>
}
