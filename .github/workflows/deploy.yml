name: EcomMVC CI/CD Pipeline

on:
  push:
    branches:
     - CiCd-TestRun

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up .NET SDK
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "8.0.x"

      # Install EF Core Tools 8.0.10
      - name: Install EF Core Tools 8.0.10
        run: dotnet tool install --global dotnet-ef --version 8.0.10

      # Verify dotnet-ef version
      - name: Verify dotnet-ef version
        run: dotnet ef --version

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Build the project
      - name: Build the project
        run: dotnet build --configuration Release

      # Publish the project
      - name: Publish the project
        run: dotnet publish --configuration Release --output ./publish

      # Modify web.config to trigger IIS restart
      - name: Modify web.config to trigger app pool restart
        run: |
          TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
          echo "<!-- Deployment: $TIMESTAMP -->" >> ./publish/web.config
        shell: bash

      # Upload web.config first to trigger IIS restart
      - name: Upload web.config to MonsterASP
        run: |
          echo "Uploading web.config file..."
          curl -v -T ./publish/web.config "ftp://${{ secrets.MONSTERASP_FTP_LOGIN_USER }}:${{ secrets.MONSTERASP_FTP_PW }}@${{ secrets.MONSTERASP_FTP_SERVERNAME }}/wwwroot/web.config"
        shell: bash
        
      # Deploy the rest of the app files
      - name: Deploy to MonsterASP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.MONSTERASP_FTP_SERVERNAME }}
          username: ${{ secrets.MONSTERASP_FTP_LOGIN_USER }}
          password: ${{ secrets.MONSTERASP_FTP_PW }}
          local-dir: ./publish/
          server-dir: /wwwroot/

      # Apply database migrations
      - name: Apply database migrations
        run: dotnet ef database update --configuration Release --no-build --project ./EcomSiteMVC.csproj
        env:
          ASPNETCORE_ENVIRONMENT: Production
          ConnectionStrings__EcomDB: ${{ secrets.MONSTERASP_ECOMDB_CONNECTION_STRING }}
