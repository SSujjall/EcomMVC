name: EcomMVC CI/CD Pipeline

on:
  push:
    branches:
      - CiCd-TestRun # Trigger on push to this branch

jobs:
  build_and_deploy:
    runs-on: windows-latest # WebDeploy requires Windows environment

    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up .NET SDK
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Install EF Core Tools 8.0.10
      - name: Install EF Core Tools 8.0.10
        run: dotnet tool install --global dotnet-ef --version 8.0.10

      # Verify dotnet-ef version
      - name: Verify dotnet-ef version
        run: dotnet ef --version

      # Restore dependencies
      - name: Install dependencies
        run: dotnet restore

      # Build the project
      - name: Build
        run: dotnet build --configuration Release --no-restore

      # Publish the project
      - name: Publish
        run: dotnet publish --configuration Release --output ./publish --runtime win-x86

      # Debug: List contents of the publish folder to verify the files are there
      - name: List published files
        run: dir ./publish

      # Create a special marker file to check if this is first deployment
      - name: Create deployment marker
        run: |
          # Create a marker file that will be used to check if appsettings exists
          echo "This file is used to check if appsettings.json exists on the server" > ./publish/deployment-check.txt

      # Deploy only the marker file first
      - name: Deploy marker file
        uses: rasmusbuchholdt/simply-web-deploy@2.1.0
        with:
          website-name: ${{ secrets.WEBSITE_NAME }}
          server-computer-name: ${{ secrets.SERVER_COMPUTER_NAME }}
          server-username: ${{ secrets.SERVER_USERNAME }}
          server-password: ${{ secrets.SERVER_PASSWORD }}
          source-path: publish/deployment-check.txt
          target-path: /
        continue-on-error: true

      # Update appsettings.json with production values for first deployment
      - name: Prepare appsettings for first deployment
        run: |
          # If this is the first deployment, we need to include appsettings.json
          # Otherwise, we'll remove it to prevent overwriting the existing one
          powershell -Command |
            $response = Invoke-WebRequest -Uri "https://${{ secrets.WEBSITE_NAME }}/deployment-check.txt" -UseBasicParsing -ErrorAction SilentlyContinue
            if ($response.StatusCode -eq 200) {
              Write-Host "This is not the first deployment. Removing appsettings.json to preserve server version."
              Remove-Item -Path ./publish/appsettings.json -Force -ErrorAction SilentlyContinue
            } else {
              Write-Host "This appears to be the first deployment. Including appsettings.json."
              # Optionally, you could modify appsettings.json here with production values
            }
        continue-on-error: true

      # Deploy the application
      - name: Deploy to MonsterASP.NET via WebDeploy
        uses: rasmusbuchholdt/simply-web-deploy@2.1.0
        with:
          website-name: ${{ secrets.WEBSITE_NAME }}
          server-computer-name: ${{ secrets.SERVER_COMPUTER_NAME }}
          server-username: ${{ secrets.SERVER_USERNAME }}
          server-password: ${{ secrets.SERVER_PASSWORD }}
          source-path: publish/
          target-path: /

      # Apply database migrations
      - name: Apply database migrations
        run: dotnet ef database update --configuration Release --no-build --project ./EcomSiteMVC.csproj
        env:
          ASPNETCORE_ENVIRONMENT: Production
          ConnectionStrings__EcomDB: ${{ secrets.MONSTERASP_ECOMDB_CONNECTION_STRING }}

      # Clean up the marker file
      - name: Remove deployment marker
        run: |
          Remove-Item -Path ./publish/deployment-check.txt -Force -ErrorAction SilentlyContinue