name: EcomMVC CI/CD Pipeline

on:
  push:
    branches:
      - master # Trigger on push to this branch

jobs:
  build_and_deploy:
    runs-on: windows-latest # WebDeploy requires Windows environment

    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up .NET SDK
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Install EF Core Tools 8.0.10
      - name: Install EF Core Tools 8.0.10
        run: dotnet tool install --global dotnet-ef --version 8.0.10

      # Verify dotnet-ef version
      - name: Verify dotnet-ef version
        run: dotnet ef --version

      # Restore dependencies
      - name: Install dependencies
        run: dotnet restore

      # Build the project
      - name: Build
        run: dotnet build --configuration Release --no-restore

      # Publish the project
      - name: Publish
        run: dotnet publish --configuration Release --output ./publish --runtime win-x86

      # Debug: List contents of the publish folder to verify the files are there
      - name: List published files
        run: dir ./publish

      # Handle appsettings.json based on environment variable
      - name: Handle appsettings.json
        run: |
          # If SKIP_APPSETTINGS is true, remove appsettings.json from deployment
          if ("${{ vars.SKIP_APPSETTINGS }}" -eq "true") {
              Write-Host "SKIP_APPSETTINGS is true. Removing appsettings.json..."
              Remove-Item -Path ./publish/appsettings.json -Force -ErrorAction SilentlyContinue
              Write-Host "appsettings.json removed from deployment package."
          } else {
              Write-Host "Including appsettings.json in deployment."
          }
        shell: pwsh

      # Deploy to MonsterASP.NET via WebDeploy
      - name: Deploy to MonsterASP.NET via WebDeploy
        uses: rasmusbuchholdt/simply-web-deploy@2.1.0
        with:
          website-name: ${{ secrets.WEBSITE_NAME }}
          server-computer-name: ${{ secrets.SERVER_COMPUTER_NAME }}
          server-username: ${{ secrets.SERVER_USERNAME }}
          server-password: ${{ secrets.SERVER_PASSWORD }}
          source-path: publish/
          target-path: /

      # Apply database migrations
      - name: Apply database migrations
        run: dotnet ef database update --configuration Release --no-build --project ./EcomSiteMVC.csproj
        env:
          ASPNETCORE_ENVIRONMENT: Production
          ConnectionStrings__EcomDB: ${{ secrets.MONSTERASP_ECOMDB_CONNECTION_STRING }}