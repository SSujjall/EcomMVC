@{
	ViewData["Title"] = "Dashboard";
}
@model EcomSiteMVC.Core.DTOs.DashboardViewModel

<script src="~/lib/chartjs/chart.umd.js"></script>

<div class="container mt-5">
	<div class="row">
		<!-- Cards for Total Sales & Orders -->
		<div class="col">
			<div class="card">
				<div class="card-header">Total Sales</div>
				<div class="card-body">
					<h5 class="card-title">@Model.TotalNoOfSales</h5>
				</div>
			</div>
		</div>

		<div class="col">
			<div class="card">
				<div class="card-header">Total Orders</div>
				<div class="card-body">
					<h5 class="card-title">@Model.TotalNoOfOrders</h5>
				</div>
			</div>
		</div>
	</div>

	<!-- Charts for Sales, Revenue, and Category Sales -->
	<div class="row mt-5">
		<!-- Monthly Sales (Bar Chart) -->
		<div class="col-md-6">
			<canvas id="monthlySalesChart"></canvas>
		</div>

		<!-- Monthly Revenue (Line Chart) -->
		<div class="col-md-6">
			<canvas id="monthlyRevenueChart"></canvas>
		</div>
	</div>

	<div class="row mt-5">
		<!-- Top Category Sales (Doughnut Chart) -->
		<div class="col-md-6">
			<canvas id="topCategorySalesChart"></canvas>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		// Monthly Sales (Bar Chart)
		var monthlySalesChartCtx = document.getElementById('monthlySalesChart').getContext('2d');
		var monthlySalesChart = new Chart(monthlySalesChartCtx, {
			type: 'bar',
			data: {
				labels: @Html.Raw(Json.Serialize(Model.MonthlySalesChartData.labels)),
				datasets: [{
					label: 'Monthly Sales',
					data: @Html.Raw(Json.Serialize(Model.MonthlySalesChartData.datasets[0].data)),
					backgroundColor: 'rgba(54, 162, 235, 0.2)',
					borderColor: 'rgba(54, 162, 235, 1)',
					borderWidth: 1
				}]
			}
		});

		// Monthly Revenue (Line Chart)
		var monthlyRevenueChartCtx = document.getElementById('monthlyRevenueChart').getContext('2d');
		var monthlyRevenueChart = new Chart(monthlyRevenueChartCtx, {
			type: 'line',
			data: {
				labels: @Html.Raw(Json.Serialize(Model.MonthlyRevenueChartData.labels)),
				datasets: [{
					label: 'Monthly Revenue',
					data: @Html.Raw(Json.Serialize(Model.MonthlyRevenueChartData.datasets[0].data)),
					backgroundColor: 'rgba(255, 99, 132, 0.2)',
					borderColor: 'rgba(255, 99, 132, 1)',
					borderWidth: 1
				}]
			}
		});

		// Top Category Sales (Doughnut Chart)
		var topCategorySalesChartCtx = document.getElementById('topCategorySalesChart').getContext('2d');
		var topCategorySalesChart = new Chart(topCategorySalesChartCtx, {
			type: 'doughnut',
			data: {
				labels: @Html.Raw(Json.Serialize(Model.TopCategorySalesChartData.labels)),
				datasets: [{
					label: 'Total units sold',
					data: @Html.Raw(Json.Serialize(Model.TopCategorySalesChartData.datasets[0].data)),
					backgroundColor: [
						'rgba(255, 99, 132, 0.2)',
						'rgba(54, 162, 235, 0.2)',
						'rgba(75, 192, 192, 0.2)',
						'rgba(153, 102, 255, 0.2)',
						'rgba(255, 159, 64, 0.2)'
					],
					borderColor: [
						'rgba(255, 99, 132, 1)',
						'rgba(54, 162, 235, 1)',
						'rgba(75, 192, 192, 1)',
						'rgba(153, 102, 255, 1)',
						'rgba(255, 159, 64, 1)'
					],
					borderWidth: 1,
					hoverOffset: 5
				}]
			}
		});

		// Force chart resizing on window resize
		window.addEventListener('resize', function() {
			monthlySalesChart.resize();
			monthlyRevenueChart.resize();
			topCategorySalesChart.resize();
		});
	</script>
}
